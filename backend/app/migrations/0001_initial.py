# Generated by Django 5.1.7 on 2025-03-18 10:40

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('url', models.URLField(unique=True, validators=[django.core.validators.URLValidator(schemes=['http', 'https'])])),
                ('owner_email', models.EmailField(max_length=254)),
                ('check_interval', models.IntegerField(default=5, help_text='Interval in minutes to check website status')),
                ('expected_status_code', models.IntegerField(default=200, help_text='Expected HTTP status code for a healthy website')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='websites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UptimeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_code', models.IntegerField()),
                ('response_time', models.FloatField(help_text='Response time in milliseconds')),
                ('status', models.CharField(choices=[('UP', 'Up'), ('DOWN', 'Down'), ('SLOW', 'Slow Response')], default='UP', max_length=10)),
                ('error_message', models.TextField(blank=True, help_text='Error details if the site is DOWN', null=True)),
                ('checked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='app.website')),
            ],
            options={
                'ordering': ['-checked_at'],
                'indexes': [models.Index(fields=['checked_at'], name='app_uptimel_checked_4d7c76_idx'), models.Index(fields=['status_code'], name='app_uptimel_status__48f612_idx')],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uptime_percentage', models.FloatField(default=100.0)),
                ('avg_response_time', models.FloatField(default=0.0, help_text='Average response time in milliseconds')),
                ('downtime_count', models.IntegerField(default=0, help_text='Number of times the site was detected as DOWN')),
                ('total_checks', models.IntegerField(default=0, help_text='Total number of uptime checks performed')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('website', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='app.website')),
            ],
            options={
                'indexes': [models.Index(fields=['last_updated'], name='app_perform_last_up_151f9f_idx')],
            },
        ),
        migrations.CreateModel(
            name='DowntimeAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS')], max_length=10)),
                ('alert_status', models.CharField(choices=[('SENT', 'Sent'), ('FAILED', 'Failed'), ('THROTTLED', 'Throttled')], default='SENT', max_length=10)),
                ('message', models.TextField(blank=True, help_text='Alert content', null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='app.website')),
            ],
            options={
                'indexes': [models.Index(fields=['sent_at'], name='app_downtim_sent_at_b3c707_idx')],
            },
        ),
    ]
